{"version":3,"sources":["components/TodoForm.tsx","components/TodoList.tsx","components/TodoContainer.tsx","App.tsx","index.tsx"],"names":["Priority","TodoForm","props","initialTodo","id","nanoid","todoLabel","todoPriority","MEDIUM","completed","useState","todo","setTodo","submitTodo","addTodo","console","log","className","InputGroup","Prepend","DropdownButton","as","Append","variant","title","Dropdown","Item","onClick","HIGH","LOW","FormControl","name","value","placeholder","aria-label","aria-describedby","onChange","e","target","onKeyUp","key","Button","TodoList","todos","deleteTodos","currentTodos","setCurrentTodos","completedTodos","setCompletedTodos","useEffect","priorityOrder","sort","a","b","indexOf","length","map","t","Checkbox","checked","filter","Text","deleteTodo","TodoContainer","setTodos","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.791c56b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Todo } from './TodoContainer';\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport interface TodoFormProps {\r\n    addTodo(todo: Todo): void;\r\n}\r\n\r\nexport enum Priority {\r\n    HIGH = 'HIGH',\r\n    MEDIUM = 'MEDIUM',\r\n    LOW = 'LOW'\r\n}\r\nexport const TodoForm = (props: TodoFormProps) => {\r\n\r\n    const initialTodo : Todo = {\r\n        id: nanoid(),\r\n        todoLabel : '',\r\n        todoPriority : Priority.MEDIUM,\r\n        completed: false\r\n    }\r\n\r\n    const [todo, setTodo] = useState<Todo>(initialTodo);\r\n\r\n    const submitTodo = () => {\r\n        props.addTodo(todo);\r\n        console.log(todo);\r\n        setTodo(initialTodo);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-50 mx-auto\">\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <DropdownButton\r\n                        as={InputGroup.Append} \r\n                        variant=\"outline-primary\"\r\n                        title={todo.todoPriority}\r\n                        id=\"priority-dropdown\"\r\n                    >\r\n                        <Dropdown.Item onClick={() => setTodo({...todo, todoPriority: Priority.HIGH})}>High</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setTodo({...todo, todoPriority: Priority.MEDIUM})}>Medium</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setTodo({...todo, todoPriority: Priority.LOW})}>Low</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                name=\"todoLabel\"\r\n                value={todo.todoLabel}\r\n                placeholder=\"What are you doing today?\"\r\n                aria-label=\"What are you doing today?\"\r\n                aria-describedby=\"\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setTodo({...todo, todoLabel: e.target.value});\r\n                }}\r\n                onKeyUp={(e: React.KeyboardEvent<HTMLDivElement>) => {\r\n                    if(e.key === 'Enter' && todo.todoLabel !== \"\") {\r\n                        submitTodo();       \r\n                    }\r\n                }}\r\n                />\r\n                <InputGroup.Append>\r\n                <Button variant=\"outline-success\" onClick={submitTodo}>Add Todo</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Todo } from './TodoContainer'; \r\n\r\nimport './styles/TodoList.css';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\n\r\ninterface TodoListProps {\r\n    todos: Todo[];\r\n    deleteTodos(todos: Todo[]): void;\r\n}\r\n\r\nconst TodoList = (props: TodoListProps) => {\r\n\r\n    const {todos, deleteTodos} = props;\r\n    const [currentTodos, setCurrentTodos] = useState<Todo[]>(todos);\r\n    const [completedTodos, setCompletedTodos] = useState<Todo[]>([]);\r\n\r\n    useEffect(() => {\r\n        const priorityOrder = [\"HIGH\", \"MEDIUM\", \"LOW\"];\r\n        console.log(todos.sort((a,b) => priorityOrder.indexOf(a.todoPriority) - priorityOrder.indexOf(b.todoPriority)));\r\n\r\n        setCurrentTodos(todos.sort((a,b) => priorityOrder.indexOf(a.todoPriority) - priorityOrder.indexOf(b.todoPriority)));\r\n        setCompletedTodos([]);\r\n    },[todos]);\r\n\r\n    const deleteTodo = (t: Todo) => {\r\n        if(completedTodos.length > 0) {\r\n            deleteTodos(completedTodos);\r\n        } else {\r\n            t.completed = !t.completed;\r\n            deleteTodos([t]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={'w-50 mx-auto my-4'}>\r\n            <div className=\"py-3\"><h4>Todo List: </h4></div>\r\n            {(currentTodos.length <= 0) ? \r\n                <div>All things on this list are done!</div> \r\n            : (\r\n                currentTodos.map((t) => (\r\n                    <div>\r\n                        <InputGroup className=\"mb-3\" key={t.id} id={t.id}>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Checkbox \r\n                                    aria-label=\"Checkbox for todo\"\r\n                                    key={t.todoLabel}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                        if(e.target.checked) {\r\n                                            t.completed  = true;\r\n                                            setCompletedTodos([...completedTodos, t]);\r\n                                        } else {\r\n                                            t.completed  = false;\r\n                                            setCompletedTodos(completedTodos.filter(todo => todo !== t));\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </InputGroup.Prepend>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text \r\n                                    className=\"priority\" \r\n                                    id=\"priority\">\r\n                                        {t.todoPriority}\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            name=\"todoLabel\"\r\n                            value={t.todoLabel}\r\n                            aria-label={t.todoLabel}\r\n                            />\r\n                            <InputGroup.Append>\r\n                            <Button variant=\"outline-danger\" \r\n                                onClick={() => deleteTodo(t)}\r\n                            >\r\n                                Completed\r\n                            </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </div>\r\n                ))\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;   ","import React, { useState } from 'react';\r\nimport { TodoForm } from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nexport interface Todo {\r\n    id: string;\r\n    todoLabel: string;\r\n    todoPriority: string;\r\n    completed: boolean;\r\n}\r\n\r\nexport const TodoContainer = () => {\r\n    const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n    const addTodo = (todo: Todo) => {\r\n        setTodos([...todos, todo]);\r\n        console.log(\"this was the new todo : \"+todo);\r\n    }\r\n\r\n    const deleteTodos = (completedTodos: Todo[]) => {\r\n        console.log(completedTodos);\r\n        console.log(todos.filter(todo => !completedTodos.includes(todo)));\r\n        setTodos(todos.filter(todo => !completedTodos.includes(todo)));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"p-5\">\r\n            <TodoForm addTodo={addTodo}/>\r\n            <TodoList todos={todos} deleteTodos={deleteTodos}/>\r\n        </div>\r\n    )\r\n}","// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { TodoContainer } from './components/TodoContainer';\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App my-3\">\n      <TodoContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}